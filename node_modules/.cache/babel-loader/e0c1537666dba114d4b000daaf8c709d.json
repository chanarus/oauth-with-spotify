{"ast":null,"code":"import _classCallCheck from \"/Users/chanaru/Documents/Projects/spotify-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chanaru/Documents/Projects/spotify-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chanaru/Documents/Projects/spotify-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chanaru/Documents/Projects/spotify-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chanaru/Documents/Projects/spotify-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/chanaru/Documents/Projects/spotify-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/chanaru/Documents/Projects/spotify-app/src/context.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nvar Context = React.createContext();\n/**\n * Reducer for the search\n * Update the globle state after api returns the data\n * @param state\n * @param action\n */\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"SEARCH\":\n      return _objectSpread({}, state, {\n        trackList: action.payload,\n        heading: action.heading,\n        searchType: action.searchType,\n        noResult: action.noResult\n      });\n\n    default:\n      return state;\n  }\n};\n/**\n * Obtains parameters from the hash of the URL\n * @return Object\n */\n\n\nexport var getHashParams = function getHashParams() {\n  var hashParams = {};\n  var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n\n  while (e = r.exec(q)) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n  }\n\n  return hashParams;\n};\nexport var Provider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Provider, _Component);\n\n  function Provider() {\n    var _this;\n\n    _classCallCheck(this, Provider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Provider).call(this));\n    var params = getHashParams();\n    _this.state = {\n      trackList: [],\n      heading: \"Top 10 Tracks\",\n      searchType: \"track\",\n      noResult: false,\n      loggedIn: params.access_token ? true : false,\n      dispatch: function dispatch(action) {\n        return _this.setState(function (state) {\n          return reducer(state, action);\n        });\n      }\n    };\n    return _this;\n  }\n  /**\n   * Initial request for the api to load data.\n   */\n\n\n  _createClass(Provider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"https://api.spotify.com/v1/search?q=linkin%20park&type=track&market=US&limit=20&offset=0\", {\n        headers: {\n          Authorization: \"Bearer \".concat(getHashParams().access_token)\n        }\n      }).then(function (res) {\n        _this2.setState({\n          trackList: res.data.tracks.items\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Context.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return Provider;\n}(Component);\nexport var Consumer = Context.Consumer;","map":{"version":3,"sources":["/Users/chanaru/Documents/Projects/spotify-app/src/context.js"],"names":["React","Component","axios","Context","createContext","reducer","state","action","type","trackList","payload","heading","searchType","noResult","getHashParams","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","Provider","params","loggedIn","access_token","dispatch","setState","get","headers","Authorization","then","res","data","tracks","items","catch","err","console","log","props","children","Consumer"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAGH,KAAK,CAACI,aAAN,EAAhB;AAEA;;;;;;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,SAAS,EAAEF,MAAM,CAACG,OAFpB;AAGEC,QAAAA,OAAO,EAAEJ,MAAM,CAACI,OAHlB;AAIEC,QAAAA,UAAU,EAAEL,MAAM,CAACK,UAJrB;AAKEC,QAAAA,QAAQ,EAAEN,MAAM,CAACM;AALnB;;AAOF;AACE,aAAOP,KAAP;AAVJ;AAYD,CAbD;AAeA;;;;;;AAIA,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,CAAJ;AAAA,MACEC,CAAC,GAAG,sBADN;AAAA,MAEEC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CAFN;;AAGA,SAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAwB;AACtBH,IAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACD;;AACD,SAAOD,UAAP;AACD,CATM;AAWP,WAAaU,QAAb;AAAA;AAAA;AAAA;;AACE,sBAAc;AAAA;;AAAA;;AACZ;AACA,QAAMC,MAAM,GAAGZ,aAAa,EAA5B;AACA,UAAKR,KAAL,GAAa;AACXG,MAAAA,SAAS,EAAE,EADA;AAEXE,MAAAA,OAAO,EAAE,eAFE;AAGXC,MAAAA,UAAU,EAAE,OAHD;AAIXC,MAAAA,QAAQ,EAAE,KAJC;AAKXc,MAAAA,QAAQ,EAAED,MAAM,CAACE,YAAP,GAAsB,IAAtB,GAA6B,KAL5B;AAMXC,MAAAA,QAAQ,EAAE,kBAAAtB,MAAM;AAAA,eAAI,MAAKuB,QAAL,CAAc,UAAAxB,KAAK;AAAA,iBAAID,OAAO,CAACC,KAAD,EAAQC,MAAR,CAAX;AAAA,SAAnB,CAAJ;AAAA;AANL,KAAb;AAHY;AAWb;AAED;;;;;AAdF;AAAA;AAAA,wCAiBsB;AAAA;;AAClBL,MAAAA,KAAK,CACF6B,GADH,CAEI,0FAFJ,EAGI;AACEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,mBAAYnB,aAAa,GAAGc,YAA5B;AADN;AADX,OAHJ,EASGM,IATH,CASQ,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACL,QAAL,CAAc;AACZrB,UAAAA,SAAS,EAAE0B,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAgBC;AADf,SAAd;AAGD,OAbH,EAcGC,KAdH,CAcS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAdZ;AAeD;AAjCH;AAAA;AAAA,6BAmCW;AACP,aACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,QAAA,KAAK,EAAE,KAAKlC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKqC,KAAL,CAAWC,QADd,CADF;AAKD;AAzCH;;AAAA;AAAA,EAA8B3C,SAA9B;AA4CA,OAAO,IAAM4C,QAAQ,GAAG1C,OAAO,CAAC0C,QAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\n/**\n * Reducer for the search\n * Update the globle state after api returns the data\n * @param state\n * @param action\n */\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH\":\n      return {\n        ...state,\n        trackList: action.payload,\n        heading: action.heading,\n        searchType: action.searchType,\n        noResult: action.noResult\n      };\n    default:\n      return state;\n  }\n};\n\n/**\n * Obtains parameters from the hash of the URL\n * @return Object\n */\nexport const getHashParams = () => {\n  let hashParams = {};\n  let e,\n    r = /([^&;=]+)=?([^&;]*)/g,\n    q = window.location.hash.substring(1);\n  while ((e = r.exec(q))) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n  }\n  return hashParams;\n};\n\nexport class Provider extends Component {\n  constructor() {\n    super();\n    const params = getHashParams();\n    this.state = {\n      trackList: [],\n      heading: \"Top 10 Tracks\",\n      searchType: \"track\",\n      noResult: false,\n      loggedIn: params.access_token ? true : false,\n      dispatch: action => this.setState(state => reducer(state, action))\n    };\n  }\n\n  /**\n   * Initial request for the api to load data.\n   */\n  componentDidMount() {\n    axios\n      .get(\n        \"https://api.spotify.com/v1/search?q=linkin%20park&type=track&market=US&limit=20&offset=0\",\n        {\n          headers: {\n            Authorization: `Bearer ${getHashParams().access_token}`\n          }\n        }\n      )\n      .then(res => {\n        this.setState({\n          trackList: res.data.tracks.items\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n"]},"metadata":{},"sourceType":"module"}